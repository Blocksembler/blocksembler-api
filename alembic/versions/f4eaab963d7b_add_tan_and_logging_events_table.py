"""add tan and logging_events table

Revision ID: f4eaab963d7b
Revises: 
Create Date: 2025-10-04 11:45:10.438807

"""
from typing import Sequence, Union

from alembic import op

import sqlmodel
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f4eaab963d7b'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('tan',
    sa.Column('code', sa.String(), nullable=False),
    sa.Column('valid_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('valid_to', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('logging_events',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('tan_code', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('source', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('type', sqlmodel.sql.sqltypes.AutoString(), nullable=True),
    sa.Column('payload', postgresql.JSON(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['tan_code'], ['tan.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_logging_events_id'), 'logging_events', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_logging_events_id'), table_name='logging_events')
    op.drop_table('logging_events')
    op.drop_table('tan')
    # ### end Alembic commands ###
