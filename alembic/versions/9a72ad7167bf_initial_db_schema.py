"""initial db schema

Revision ID: 9a72ad7167bf
Revises: 
Create Date: 2025-10-08 10:30:47.144381

"""
from typing import Sequence, Union

from alembic import op

import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '9a72ad7167bf'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercise',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('title', sa.TEXT(), nullable=False),
    sa.Column('markdown', sa.TEXT(), nullable=False),
    sa.Column('coding_mode', sa.VARCHAR(length=3), nullable=False),
    sa.Column('next_exercise_id', sa.Integer(), nullable=True),
    sa.Column('allow_skip_after', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['next_exercise_id'], ['exercise.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('competition',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.TEXT(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('first_exercise_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['first_exercise_id'], ['exercise.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('tan',
    sa.Column('code', sa.VARCHAR(length=29), nullable=False),
    sa.Column('valid_from', sa.DateTime(timezone=True), nullable=True),
    sa.Column('valid_to', sa.DateTime(timezone=True), nullable=True),
    sa.Column('competition_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['competition_id'], ['competition.id'], ),
    sa.PrimaryKeyConstraint('code')
    )
    op.create_table('exercise_progress',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('tan_code', sa.VARCHAR(length=20), nullable=False),
    sa.Column('exercise_id', sa.INTEGER(), nullable=False),
    sa.Column('start_time', sa.DateTime(timezone=True), nullable=False),
    sa.Column('end_time', sa.DateTime(timezone=True), nullable=True),
    sa.Column('skipped', sa.BOOLEAN(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['tan_code'], ['tan.code'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('tan_code', 'end_time', name='unique_tan_code_and_end_time')
    )
    op.create_table('grading_job',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('tan_code', sa.VARCHAR(length=20), nullable=True),
    sa.Column('exercise_id', sa.INTEGER(), nullable=True),
    sa.Column('status', sa.VARCHAR(length=20), nullable=True),
    sa.Column('started', sa.DateTime(timezone=True), nullable=True),
    sa.Column('terminated', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['tan_code'], ['tan.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('logging_event',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('tan_code', sa.VARCHAR(length=20), nullable=True),
    sa.Column('timestamp', sa.DateTime(timezone=True), nullable=True),
    sa.Column('source', sa.TEXT(), nullable=True),
    sa.Column('type', sa.TEXT(), nullable=True),
    sa.Column('payload', sa.JSON(), nullable=True),
    sa.Column('exercise_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['exercise_id'], ['exercise.id'], ),
    sa.ForeignKeyConstraint(['tan_code'], ['tan.code'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_logging_event_id'), 'logging_event', ['id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_logging_event_id'), table_name='logging_event')
    op.drop_table('logging_event')
    op.drop_table('grading_job')
    op.drop_table('exercise_progress')
    op.drop_table('tan')
    op.drop_table('competition')
    op.drop_table('exercise')
    # ### end Alembic commands ###
